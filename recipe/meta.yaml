# pyvips supports cffi ABI and API mode
#
# During setup.py, it will attempt to compile a generated wrapper against the
# libvips headers -- this is why it needs pkgconfig and libvips in host.
#
# At runtime, it will first try to load the compiled wrapper, and if that
# fails, will fall back to ABI mode, ie. directly opening the libvips shared
# library and calling into it with cffi.

# Skip win since libvips is not packaged for conda there. It is blocked on
# at least gdk-pixbuf.

{% set name = "pyvips" %}
{% set version = "3.0.0" %}
{% set python_min = "3.7" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/libvips/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 252819173f4d3737c516c5b81aa3c82a92a21f666633705ecf239a0b33e95899

build:
  number: 4
  script:
    # Ensure we can find the vips package
    - pkg-config --exists --print-errors vips
    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv
  skip: true  # [win]
  ignore_run_exports:
    # We need to pull in metapackages for these below to get devel files, but
    # don't depend on these libraries directly:
    - libexpat

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - pkg-config                          # [not win]
    - python {{ python_min }}             # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - cffi >=1.0                          # [build_platform != target_platform]
    - pkgconfig >=1.5                     # [build_platform != target_platform]
    - libvips                             # [build_platform != target_platform]
  host:
    - python {{ python_min }}
    - pip
    - setuptools >=61
    - cffi >=1.0
    - pkgconfig >=1.5                     # [not win]
    - libvips
    - glib
    # Needed for devel files (e.g. pkg-config):
    - expat
    - xorg-xorgproto                      # [linux]
  run:
    - python >={{ python_min }}
    - cffi >=1.0

test:
  requires:
    - pip
  imports:
    - pyvips
    - _libvips
  commands:
    - pip check
    - python -c "import pyvips; assert pyvips.API_mode"

about:
  home: https://github.com/libvips/pyvips
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  summary: Binding for libvips
  doc_url: https://libvips.github.io/pyvips/

extra:
  recipe-maintainers:
    - jcupitt
    - hmaarrfk
    - kleisauke
